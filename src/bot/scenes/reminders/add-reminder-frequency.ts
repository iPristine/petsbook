import { Action, Ctx, Scene, SceneEnter } from 'nestjs-telegraf';
import { BotScenes } from '../types';
import { ReminderButtons } from './reminder.buttons';
import { BotContext } from 'src/bot/interfaces/context.interface';
import { Markup } from 'telegraf';
import { ReminderFrequency } from '@prisma/client';


const frequencies = [
  ReminderFrequency.ONCE,
  ReminderFrequency.WEEKLY,
  ReminderFrequency.MONTHLY,
  ReminderFrequency.QUARTERLY,
  ReminderFrequency.YEARLY,
];
@Scene(BotScenes.ADD_REMINDER_FREQUENCY)
export class AddReminderFrequency {
  @SceneEnter()
  async enterAddReminderFrequency(@Ctx() ctx: BotContext) {
    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:',
      this.frequency(),
    );
  }

  @Action(frequencies)
  async onFrequency(@Ctx() ctx: BotContext) {
    const frequency = ctx.callbackQuery['data'] as ReminderFrequency;
    ctx.session.data.reminderFrequency = frequency;
    await ctx.scene.enter(BotScenes.ADD_REMINDER_NOTIFY);
  }

  frequency() {
    return Markup.inlineKeyboard([
      [Markup.button.callback('üìÖ –†–∞–∑–æ–≤–æ–µ', ReminderFrequency.ONCE)],
      [Markup.button.callback('üîÑ –†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é', ReminderFrequency.WEEKLY)],
      [Markup.button.callback('üîÑ –†–∞–∑ –≤ –º–µ—Å—è—Ü', ReminderFrequency.MONTHLY)],
      [Markup.button.callback('üîÑ –†–∞–∑ –≤ 3 –º–µ—Å—è—Ü–∞', ReminderFrequency.QUARTERLY)],
      [Markup.button.callback('üîÑ –†–∞–∑ –≤ –≥–æ–¥', ReminderFrequency.YEARLY)],
    ]);
  }
}
