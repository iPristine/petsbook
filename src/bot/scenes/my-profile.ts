import { Action, Ctx, Scene, SceneEnter } from 'nestjs-telegraf';
import { Context } from 'telegraf';
import { BotButtons } from '../bot.buttons';
import { I18nTranslateService } from '../../i18n/i18n.service';
import { BotScenes } from './types';
import { UserService } from 'src/user/user.service';

@Scene(BotScenes.MY_PROFILE)
export class MyProfile {
  constructor(
    private i18n: I18nTranslateService,
    private userService: UserService,
  ) {}

  @SceneEnter()
  async enterMyProfile(@Ctx() ctx: Context) {
    try {
      const user = await this.userService.findOne(ctx.from.id);
      const message = [
        `üë§ –ò–º—è: ${user.firstName}`,
        user.lastName ? `–§–∞–º–∏–ª–∏—è: ${user.lastName}` : null,
        user.username ? `Username: @${user.username}` : null,
        `üåê –Ø–∑—ã–∫: ${user.lang || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`,
        `üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.createdAt.toLocaleDateString()}`,
      ]
        .filter(Boolean)
        .join('\n');
      await ctx.reply(message, BotButtons.myProfile());
    } catch (error) {
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
  }

  @Action('back')
  async getMainMenu(@Ctx() ctx: Context) {
    ctx['session']['language'] = ctx.callbackQuery['data'];

    await ctx['scene'].enter(BotScenes.MAIN_MENU);
  }
}
