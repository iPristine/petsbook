import { Action, Ctx, Scene, SceneEnter } from 'nestjs-telegraf';
import { Context } from 'telegraf';
import { BotScenes } from '../types';
import { I18nTranslateService } from '../../../i18n/i18n.service';
import { PetsService } from '../../../pets/pets.service';
import { UserService } from '../../../user/user.service';
import { PetButtons } from './pet.buttons';

@Scene(BotScenes.PET_DELETE)
export class PetDelete {
  constructor(
    private i18n: I18nTranslateService,
    private petsService: PetsService,
    private userService: UserService,
  ) {}

  @SceneEnter()
  async enterPetDelete(@Ctx() ctx: Context) {
    const petId = ctx['session']['currentPetId'];
    const pet = await this.petsService.getPetById(petId);

    if (!pet) {
      await ctx.reply('–û—à–∏–±–∫–∞: –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω');
      await ctx['scene'].enter(BotScenes.MY_PETS);
      return;
    }

    const message = [
      '‚ö†Ô∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞?',
      '',
      `üêæ ${pet.name}`,
      `${pet.type === 'dog' ? 'üêï' : 'üê±'} ${pet.type === 'dog' ? '–°–æ–±–∞–∫–∞' : '–ö–æ—à–∫–∞'}`,
      `üéÇ ${pet.age || '–í–æ–∑—Ä–∞—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω'}`,
    ].join('\n');

    await ctx.reply(message, PetButtons.petDelete());
  }

  @Action('confirm_delete')
  async confirmDelete(@Ctx() ctx: Context) {
    const petId = ctx['session']['currentPetId'];
    const user = await this.userService.findOne(ctx.from.id);

    try {
      await this.petsService.removePet(user.id, petId);
      await ctx.reply('‚úÖ –ü–∏—Ç–æ–º–µ—Ü —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
    } catch (error) {
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∏—Ç–æ–º—Ü–∞');
    }

    await ctx['scene'].enter(BotScenes.MY_PETS);
  }

  @Action('cancel_delete')
  async cancelDelete(@Ctx() ctx: Context) {
    await ctx['scene'].enter(BotScenes.PET_DETAILS);
  }
}
